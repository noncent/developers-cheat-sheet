#  _______    ________.___ _______  ____  ___  __      __      __      __
#  \      \  /  _____/|   |\      \ \   \/  / /  \    /  \____/  \    /  \
#  /   |   \/   \  ___|   |/   |   \ \     /  \   \/\/   /  _ \   \/\/   /
# /    |    \    \_\  \   /    |    \/     \   \        (  <_> )        /
# \____|__  /\______  /___\____|__  /___/\  \   \__/\  / \____/ \__/\  /
#         \/        \/            \/      \_/        \/              \/

# $ Enable web auth
# -----------------------
# Ubuntu - sudo apt install apache2-utils
# CentOS - yum install httpd-tools
# # Command to create password file
# htpasswd -c /home/username/example.com/.htpasswd web@uth
# # Set permission
# chmod 644 .htpasswd

server {
    listen 80;
    listen 443 ssl;
    server_name www.old-name.com;
    return 301 $scheme://www.new-name.com$request_uri;
}

# Redirecting https://site.com to https://www.site.com
server {
    listen 8080;
    server_name site.com;
    return 301 $scheme://www.$host$request_uri;
}

# Main server block
server {
    listen 8080 default_server;
    listen [::]:8080 default_server;

    # Access and error log
    access_log /var/log/www-site-com/access/access.log combined;
    error_log /var/log/www-site-com/error/error.log;

    # General settings
    charset UTF-8;
    sendfile on;
    tcp_nopush on;
    server_tokens off;
    autoindex on;
    client_max_body_size 65M;
    client_body_buffer_size 12k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 4k;

    # Gzip compression settings
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/x-javascript application/xml;

    # Essential security headers
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "strict-origin";
    add_header Permissions-Policy "interest-cohort=()";
    add_header Strict-Transport-Security "max-age=31536000";
    add_header Content-Security-Policy "upgrade-insecure-requests";

    # Allow only GET, HEAD, and POST
    if ($request_method !~ ^(GET|HEAD|POST)$ ) {
        return 444;
    }

    # Custom 401 web auth page
    error_page 401 /401.html;
    location = /401.html {
        root /var/www/html/www-example-com;
        internal;
    }

    # Custom 4xx error
    error_page 403 404 /4xx.html;
    location = /4xx.html {
        root /var/www/html/www-example-com;
        internal;
    }

    # Custom 5xx error
    error_page 500 502 503 504 /5xx.html;
    location = /5xx.html {
        root /var/www/html/www-example-com;
        internal;
    }

    # Favicon 404 off
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }

    # SEO robots.txt
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Prevent unauthorized execution
    location ~ \..*/.*\.php$ {
        return 403;
    }

    # Prevent unauthorized access to specific directories
    location ~ ^/sites/.*/private/ {
        return 403;
    }

    # Block access to scripts in site files directory
    location ~ ^/sites/[^/]+/files/.*\.php$ {
        deny all;
    }

    # Allow "Well-Known URIs" as per RFC 5785
    location ~* ^/.well-known/ {
        allow all;
    }

    # User authentication
    location /user {
        auth_basic "Restricted Content";
        auth_basic_user_file /var/www/html/www-example-com/.htpasswd;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Block access to hidden files and directories
    location ~ (^|/)\. {
        return 403;
    }

    # Block access to PHP files in vendor directory
    location ~ /vendor/.*\.php$ {
        deny all;
        return 404;
    }

    # Protect sensitive files
    location ~* \.(engine|inc|install|make|module|profile|po|sh|.*sql|theme|twig|tpl(\.php)?|xtmpl|yml)(~|\.sw[op]|\.bak|\.orig|\.save)?$|^(\.(?!well-known).*|Entries.*|Repository|Root|Tag|Template|composer\.(json|lock)|web\.config)$|^#.*#$|\.php(~|\.sw[op]|\.bak|\.orig|\.save)$ {
        deny all;
        return 404;
    }

    # Serve static files
    location ~* \.(js|css|png|jpg|jpeg|gif|webp|ico|svg|woff|woff2|mp4|webm)$ {
        try_files $uri @rewrite;
        expires max;
        log_not_found off;
    }

    # Imagecache
    location ~ ^/sites/.*/files/styles/ {
        try_files $uri @rewrite;
    }

    # Private file handling
    location ~ ^(/[a-z\-]+)?/system/files/ {
        try_files $uri /index.php?$query_string;
    }

    # Enforce clean URLs
    if ($request_uri ~* "^(.*/)index\.php/(.*)") {
        return 307 $1$2;
    }

    # Default root directory
    location / {
        autoindex off;
        try_files $uri $uri/ /index.php?$query_string;
        proxy_read_timeout 3600;
    }

    # Rewrite
    location @rewrite {
        rewrite ^ /index.php;
    }

    # PHP-FPM settings
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_param HTTP_PROXY "";
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param QUERY_STRING $query_string;
        fastcgi_intercept_errors on;
        fastcgi_buffer_size 128k;
        fastcgi_buffers 4 256k;
        fastcgi_busy_buffers_size 256k;
        fastcgi_temp_file_write_size 256k;
        fastcgi_connect_timeout 120;
        fastcgi_send_timeout 120;
        fastcgi_read_timeout 120;
        fastcgi_pass unix:/var/run/php/php-fpm.sock;
    }

    # SSL settings
    ssl_certificate /etc/ssl/localhost/localhost.crt;
    ssl_certificate_key /etc/ssl/localhost/localhost.key;
    ssl_ciphers HIGH:!aNULL:!MD5;
    
    root /usr/local/var/www;
    index index.html;

    # Handle favicon and robots.txt
    location = /favicon.ico {
        log_not_found off;
        access_log off;
    }
    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    # Language-based URL rewrites
    location ~ ^/(es|fr|it|pt)(.*)$ {
        rewrite ^/(es|fr|it|pt|pt-br)(.*)$ $scheme://$host/en$2;
    }

    # Blog-related settings
    location ~* /blog {
        if ($http_x_forwarded_proto = 'http') {
            return 301 https://$host$request_uri;
        }
        index index.html;
        root /site/stage.example.in;
        rewrite ^/(?:en|hi)(?:/(.*))?$ /$1;
        try_files $uri $uri/ @blogfallback;
        access_log /site/stage.example.in/logs/access.log;
        error_log /site/stage.example.in/logs/error.log;
    }

    location @blogfallback {
        rewrite ^(.*)$ /blog/index.html?$args last;
    }

    # Essential security headers
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "strict-origin";
    add_header Permissions-Policy "interest-cohort=()";
    add_header Strict-Transport-Security "max-age=31536000";
    add_header Content-Security-Policy "upgrade-insecure-requests";

    # Set default path
    set $root /var/www/html/uat.cera-india.com/web;
    root $root;
}
