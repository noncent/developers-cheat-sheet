# Logging
error_log /var/log/nginx/error.log warn;
access_log /var/log/nginx/access.log main;

# Load dynamic modules
include /usr/share/nginx/modules/*.conf;

# Block bad bots
map $http_user_agent $bad_bot {
    default 0;
    ~*(googlebot|bingbot|yandexbot) 1;
}

# HTTP Server Block - redirect all HTTP to HTTPS
server {
    listen 80;
    server_name www.sample.com sample.com;
    return 301 https://$host$request_uri;
}

# HTTPS Server Block
server {
    listen 443 ssl http2;
    server_name www.sample.com sample.com;

    # SSL Configuration (use your actual cert files)
    ssl_certificate /etc/nginx/ssl/sample.com.crt;
    ssl_certificate_key /etc/nginx/ssl/sample.com.key;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;
    ssl_prefer_server_ciphers on;

    # HSTS
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # Security Headers
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; object-src 'none'; frame-ancestors 'none'; base-uri 'self';" always;

    # Hide NGINX version
    server_tokens off;

    # Disable directory listing
    autoindex off;

    # Root and index
    root /usr/share/nginx/html/panasonic/web;
    index index.php index.html index.htm;

    # Block bad bots
    if ($bad_bot) {
        return 444;
    }

    # Block common XSS patterns in URLs
    if ($request_uri ~* "(<script>|</script>|javascript:|data:|<iframe>|<img|<svg|onerror=|onload=|alert\(|document\.cookie|eval\(|prompt\(|window\.location|src=javascript:|onmouseover=|innerHTML)") {
        return 403;
    }

    # Limit client body size and timeout settings
    client_max_body_size 60M;
    client_body_timeout 10s;
    send_timeout 10s;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=one:10m rate=2r/s;
    limit_req zone=one burst=10 nodelay;

    # Compression
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
    application/javascript
    application/json
    application/xml
    text/css
    text/plain
    text/xml
    font/woff2;

    # Main app
    location / {
        try_files $uri $uri/ /index.php?$args;

        # CORS Headers (only enable if absolutely needed)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD' always;
        add_header 'Access-Control-Allow-Headers' 'Authorization, Accept, DNT, X-Requested-With, If-Modified-Since, Cache-Control, Content-Type, Range' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length, Content-Range' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # PHP Handling
    location ~ \.php$ {
        include fastcgi_params;
        fastcgi_pass unix:/run/php-fpm/www.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 300s;

        # Prevent PHP execution in uploads
        location ~* /(?:uploads|files)/.*\.php$ {
            return 403;
        }
    }

    # Cache static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        access_log off;
        add_header Cache-Control "public, max-age=2592000, immutable";
    }

    # Deny access to hidden files and sensitive stuff
    location ~ /\.(?!well-known).* {
        deny all;
    }

    # apply rate limits to specific locations:
    location /api/ {
        limit_req zone=one burst=5 nodelay;
    }

    # Extra performance tuning
    fastcgi_buffers 16 16k;
    fastcgi_buffer_size 32k;
    fastcgi_connect_timeout 10s;
    fastcgi_send_timeout 30s;
    fastcgi_read_timeout 30s;
}
